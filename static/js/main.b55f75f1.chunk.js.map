{"version":3,"sources":["assets/mind.svg","assets/brain.svg","assets/logo.png","assets/man.svg","assets/icecream.svg","assets/heart.svg","assets/splash.png","messages.js","components/NavBar/NavBar.js","pages/HomePage/HomePage.js","components/Question/Question.js","pages/QuizPage/QuizPage.js","pages/ResultPage/ResultPage.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","messages","en","male","glycemia","aspects","acm","microangiopathy","lacunar_syndrome","aortic_insufficiency","result","total","odd","likelihood","pt","es","NavBar","render","react_default","a","createElement","class","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","withRouter","connect","dispatch","changeLanguage","lang","props","history","onClick","push","components_NavBar_NavBar","src","logo","alt","Question","_this$props","this","question","checked","disabled","changeChecked","changeDisabled","classes","classNames","switch","onChange","defaultChecked","state","answers","locale","QuizPage","components_Question_Question","man","icecream","mind","brain","heart","react_router_dom","to","ResultPage","probability","score","odds","index_es","toFixed","questions_score","questions","reduce","obj","questions_prob","g","Math","pow","E","basename","process","react_router","exact","path","component","HomePage","Boolean","window","location","hostname","match","initState","rootReducer","arguments","length","undefined","action","console","log","Object","objectSpread","defineProperty","localStorage","addLocaleData","store","createStore","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b55f75f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mind.3bbab716.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.ec6748d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.793ec6f2.png\";","module.exports = __webpack_public_path__ + \"static/media/man.f8a97699.svg\";","module.exports = __webpack_public_path__ + \"static/media/icecream.04daed32.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.c0be590a.svg\";","module.exports = __webpack_public_path__ + \"static/media/splash.c0493b08.png\";","export default {\n    en:{\n        'male':'Male gender',\n        'glycemia':'Admission hyperglycemia \\u2265 180 mg/dL', \n        'aspects':'ASPECTS on admission (CT Scan)', \n        'acm':'Hyperdense MCA sign',\n        'microangiopathy':'Leukoaraiosis', \n        'lacunar_syndrome':'Lacunar syndrome', \n        'aortic_insufficiency':'Cardio-aortic embolism',\n        'result': 'Result',\n        'total': 'Total',\n        'odd': 'Odd ratio',\n        'likelihood': 'Likelihood (%)'\n    },\n    pt:{\n        'male':'Sexo Masculino',\n        'glycemia':'Glicemia Admissional \\u2265 180mg/dL',\n        'aspects':'ASPECTS admissional',\n        'acm':'Sinal de ACM hiperdensa',\n        'microangiopathy':'Microangiopatia',\n        'lacunar_syndrome':'Síndrome Lacunar',\n        'aortic_insufficiency':'Etiologia Cárdio-aórtica',\n        'result': 'Resultado',\n        'total': 'Total',\n        'odd': 'Odd ratio',\n        'likelihood': 'Likelihood (%)'\n    },\n    es:{\n        'male':'Sexo Masculino',\n        'glycemia':'Hiperglucemia de ingreso \\u2265 180mg/dL',\n        'aspects':'ASPECTS al ingresso',\n        'acm':'Sinal de ACM hiperdensa',\n        'microangiopathy':'Leucoaraiosis',\n        'lacunar_syndrome':'Síndrome lacunar',\n        'aortic_insufficiency':'Embolismo cardio-aórtico',\n        'result': 'Resultado',\n        'total': 'Total',\n        'odd': 'Odd ratio',\n        'likelihood': 'Probabilidad (%)'\n    }\n\n}","import React, { Component } from \"react\";\nimport \"./NavBar.css\";\n\nclass NavBar extends Component {\n    render = () => {\n        return (\n            <nav class=\"navbar navbar-expand-lg navbar-dark main-nav py-3\">\n                <div className=\"container\">\n                    <a class=\"navbar-brand\" href=\"#\">\n                        PROpHET\n                    </a>\n                    <button\n                        class=\"navbar-toggler\"\n                        type=\"button\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#navbarTogglerDemo02\"\n                        aria-controls=\"navbarTogglerDemo02\"\n                        aria-expanded=\"false\"\n                        aria-label=\"Toggle navigation\"\n                    >\n                        <span class=\"navbar-toggler-icon\" />\n                    </button>\n\n                    <div\n                        class=\"collapse navbar-collapse\"\n                        id=\"navbarTogglerDemo02\"\n                    >\n                        <ul class=\"navbar-nav mt-2 mt-lg-0 ml-auto\">\n                            <li class=\"nav-item active\">\n                                <a class=\"nav-link\" href=\"#\">\n                                    Home <span class=\"sr-only\">(current)</span>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" href=\"#\">\n                                    Link\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" href=\"#\">\n                                    Publications\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        );\n    };\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport logo from \"../../assets/logo.png\";\nimport splash from \"../../assets/splash.png\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./HomePage.css\";\nimport NavBar from \"../../components/NavBar/NavBar\";\n\nfunction HomePage(props) {\n    const { history, changeLanguage } = props;\n    let onClick = lang => {\n        changeLanguage(lang);\n        history.push(\"/quiz\");\n    };\n\n    return (\n        <div>\n            <NavBar />\n            <div className=\"logo my-5\">\n                <img src={logo} alt=\"\" />\n            </div>\n\n            <div className=\"container buttons-lang\">\n                <div class=\"row\">\n                    <div className=\"col-md\">\n                        <button\n                            onClick={() => {\n                                onClick(\"en\");\n                            }}\n                            className=\"btn btn-warning btn-lg btn-block my-2\"\n                        >\n                            English\n                        </button>\n                    </div>\n                    <div className=\"col-md\">\n                        <button\n                            onClick={() => {\n                                onClick(\"pt\");\n                            }}\n                            className=\"btn btn-primary btn-lg btn-block my-2\"\n                        >\n                            Português\n                        </button>\n                    </div>\n                    <div className=\"col-md\">\n                        <button\n                            onClick={() => {\n                                onClick(\"es\");\n                            }}\n                            className=\"btn btn-success btn-lg btn-block my-2\"\n                        >\n                            Españhol\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            {/* <div className=\"circle\">\n                <div className=\"menu\">\n                    <div className=\"row1\">\n                        \n                    </div>\n                    <div className=\"row2\">\n    \n                    </div>\n                    <div className=\"row3\">\n                        <button className=\"button references\">References</button>                            \n                    </div>                        \n                </div>\n            </div> */}\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeLanguage: lang => {\n            dispatch({ type: \"CHANGE_LOCALE\", lang });\n        }\n    };\n};\n\nexport default withRouter(\n    connect(\n        () => ({}),\n        mapDispatchToProps\n    )(HomePage)\n);\n","import React, { Component } from \"react\";\nimport \"./Question.css\";\n// import man from '../../assets/man.svg'\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\n// import { FormattedMessage } from \"react-intl\";\nimport messages from \"../../messages\";\n\nclass Question extends Component {\n    render() {\n        const {\n            question,\n            checked,\n            disabled,\n            changeChecked,\n            changeDisabled,\n            lang\n        } = this.props;\n        let classes = classNames({\n            switch: true,\n            // checked: true,\n            disabled: disabled\n        });\n\n        return (\n            <div className=\"my-4 question\">\n                <img src={this.props.src} alt=\"\" />\n                <div className=\"texto\">\n                    <span>{messages[lang][question]}</span>\n                    {/* <FormattedMessage id={question}></FormattedMessage> */}\n                </div>\n                <div className=\"group\">\n                    <label\n                        className={classes}\n                        onChange={() => changeChecked(question)}\n                    >\n                        <input type=\"checkbox\" defaultChecked={checked} />\n                        <span className=\"slider\" />\n                    </label>\n                    <label\n                        className=\"checkmark-container\"\n                        onChange={() => changeDisabled(question)}\n                    >\n                        <span className=\"big\">Não disponível</span>\n                        <span className=\"small\">N/A</span>\n                        <input type=\"checkbox\" defaultChecked={disabled} />\n                        <span className=\"checkmark\" />\n                    </label>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        checked: state.answers[props.question].checked,\n        disabled: state.answers[props.question].disabled,\n        lang: state.locale.lang\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeChecked: question => {\n            dispatch({ type: \"CHANGE_CHECKED\", question });\n        },\n        changeDisabled: question => {\n            dispatch({ type: \"CHANGE_DISABLED\", question });\n        }\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Question);\n","import React, {Component} from 'react';\nimport Question from '../../components/Question/Question'\nimport { Link } from 'react-router-dom';\nimport './QuizPage.css'\n\nimport man from '../../assets/man.svg'\nimport icecream from '../../assets/icecream.svg'\nimport mind from '../../assets/mind.svg'\nimport brain from '../../assets/brain.svg'\nimport heart from '../../assets/heart.svg'\nimport NavBar from '../../components/NavBar/NavBar';\n\nclass QuizPage extends Component{\n    render(){\n        return (\n            <div className=\"quiz-container\">\n                <NavBar></NavBar>\n                <div className=\"inner-quiz\">\n                    <div className=\"quiz\">\n                        <Question question=\"male\" src={man}/>\n                        <Question question=\"glycemia\" src={icecream}/>\n                        <Question question=\"aspects\" src={mind}/>\n                        <Question question=\"acm\" src={mind}/>\n                        <Question question=\"microangiopathy\" src={brain}/>\n                        <Question question=\"lacunar_syndrome\" src={brain}/>\n                        <Question question=\"aortic_insufficiency\" src={heart}/>\n                        <Link className=\"evaluate my-5\" to='/result'>Evaluate</Link>\n                    </div>                \n                </div>                \n            </div>                \n        )\n    }\n}\n\nexport default QuizPage;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl'\nimport './ResultPage.css'\n\nclass ResultPage extends Component{\n    render(){\n        const { probability, score, odds } = this.props;\n        return(            \n            <div className=\"result-container\">\n                <div className=\"result-inner-container\">\n                    <div className=\"results\">\n                        <div className=\"panel large\">\n                            <FormattedMessage id='result'></FormattedMessage>\n                            </div>\n                        <div className=\"result-item\">\n                            <div className=\"panel large\">\n                                <FormattedMessage id=\"total\"></FormattedMessage>\n                            </div>\n                            <div className=\"result-value\">{score}</div>\n                        </div>\n                        <div className=\"result-item\">\n                            <div className=\"panel large\">\n                                <FormattedMessage id=\"odd\"></FormattedMessage>\n                            </div>\n                            <div className=\"result-value\">{odds}</div>\n                        </div>\n                        <div className=\"result-item\">\n                            <div className=\"panel large green\">\n                                <FormattedMessage id=\"likelihood\"></FormattedMessage>                                \n                            </div>\n                            <div className=\"result-value red\">{(probability*100).toFixed(0)}%</div>\n                        </div>\n                        {score >= 3 &&\n                            <div className=\"alert\">\n                                <b>Alerta: Pontuação Total maior que 3 </b> <br/>\n                                Sensibilidade: 74.7% <br/> \n                                Especificidade 76.5% <br/>\n                                Sensibilidade para TH Sintomática: 80% <br/>\n                                Especificidade para TH Sintomática: 77% <br/>\n                            </div>\n                        }                        \n                    </div>                    \n                </div>\n            </div>\n        )  \n    }\n}\n\nconst mapStateToProps = (state) =>{\n    let questions_score = state.questions.reduce(\n        (obj, question) => {         \n            if(state.answers[question].disabled){\n                obj[question] = 0;\n            }else{\n                obj[question] = +state.answers[question].checked;\n            }            \n            return obj;\n        }, {});\n    let score = 1*questions_score.male + 1*questions_score.glycemia +\n        2*questions_score.aspects + 2*questions_score.acm + \n        1*questions_score.microangiopathy -2*questions_score.lacunar_syndrome +\n        1*questions_score.aortic_insufficiency;\n\n    let questions_prob = state.questions.reduce(\n        (obj, question) => {\n            if(state.answers[question].disabled){\n                obj[question] = 0;\n            }else{\n                if(state.answers[question].checked){\n                    obj[question] = 1;\n                }else{\n                    obj[question] = -1;\n                }\n            }            \n            return obj;\n        }, {});\n    let g = -2.535 + 1.153*questions_prob.male + 1.366*questions_prob.glycemia +\n                1.602*questions_prob.aspects + 0.814*questions_prob.acm + \n                0.645*questions_prob.microangiopathy - 2.219*questions_prob.lacunar_syndrome +\n                1.257*questions_prob.aortic_insufficiency;\n    let probability = 1/(1+Math.pow(Math.E, -g))\n    return{\n        probability,\n        score,\n        odds: (score+2)*1.38,\n    }\n}\nexport default connect(mapStateToProps)(ResultPage);","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport { IntlProvider } from \"react-intl\";\nimport { connect } from 'react-redux';\nimport messages from './messages';\nimport HomePage from './pages/HomePage/HomePage';\nimport QuizPage from './pages/QuizPage/QuizPage'\nimport ResultPage from './pages/ResultPage/ResultPage'\n\n\nfunction App(props) {\n  const {lang} = props;\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <IntlProvider locale={lang} messages={messages[lang]}>\n        <div className=\"App\">\n          <Route exact path='/' component={HomePage} />\n          <Route path='/quiz' component={QuizPage} />\n          <Route path='/result' component={ResultPage} />\n          {/* <HomePage></HomePage> */}\n        </div>\n      </IntlProvider>      \n    </BrowserRouter>\n  );\n}\n\nconst mapStateToProps = (state) =>{\n  return({\n    lang: state.locale.lang,\n  })\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    answers:{\n        male: {\n            checked: false,\n            disabled: false,\n        },\n        glycemia:{\n            checked: false,\n            disabled: false,\n        },\n        aspects:{\n            checked: false,\n            disabled: false,\n        },\n        acm:{\n            checked: false,\n            disabled: false,\n        },\n        microangiopathy:{\n            checked: false,\n            disabled: false,\n        },\n        lacunar_syndrome:{\n            checked: false,\n            disabled: false,\n        },\n        aortic_insufficiency:{\n            checked: false,\n            disabled: false,\n        },\n    },    \n    questions: [\n        'male', 'glycemia', 'aspects', 'acm', 'microangiopathy', 'lacunar_syndrome', 'aortic_insufficiency'\n    ],\n    locale:{\n        lang: 'en'\n    }\n}\n\nconst rootReducer = (state = initState, action) => {\n    console.log(state);\n    console.log(action);\n    if(action.type==='CHANGE_CHECKED'){\n        return({\n            ...state,\n            answers:{\n                ...state.answers,\n                [action.question]:{\n                    ...state.answers[action.question],\n                    checked: !state.answers[action.question].checked,\n                }\n            }            \n        })\n    }else if(action.type==='CHANGE_DISABLED'){\n        return({\n            ...state,\n            answers:{\n                ...state.answers,\n                [action.question]:{\n                    ...state.answers[action.question],\n                    disabled: !state.answers[action.question].disabled,\n                }\n            }\n        })\n    }else if(action.type==='CHANGE_LOCALE'){\n        localStorage.lang = action.lang;\n        return({\n            ...state,\n            locale:{\n                ...state.locale,\n                lang:action.lang,\n            }\n        })\n    }\n    return state;\n}\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport { Provider  } from 'react-redux'\nimport { addLocaleData } from \"react-intl\";\nimport en from 'react-intl/locale-data/en';\nimport es from 'react-intl/locale-data/es';\nimport pt from 'react-intl/locale-data/pt';\nimport rootReducer from './reducers/rootReducer'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n\n// import '../node_modules/startbootstrap-freelancer/vendor/fontawesome-free/css/all.min.css';\n// import './assets/fonts/montserrat.css';\n// import './assets/fonts/lato.css';\n// import '../node_modules/startbootstrap-freelancer/css/freelancer.min.css';\n\n// import $ from 'jquery';\n// // import jQuery from 'jquery';\n// // window.$ = window.jQuery=jQuery;\n// import '../node_modules/startbootstrap-freelancer/vendor/jquery/jquery.slim';\n// import '../node_modules/startbootstrap-freelancer/vendor/bootstrap/js/bootstrap.bundle';\n// import '../node_modules/startbootstrap-freelancer/vendor/jquery-easing/jquery.easing';\n// // require('../node_modules/startbootstrap-freelancer/js/jqBootstrapValidation');\n// // require('../node_modules/startbootstrap-freelancer/js/contact_me');\n// // require('../node_modules/startbootstrap-freelancer/js/freelancer');\n\n\naddLocaleData(en);\naddLocaleData(pt);\naddLocaleData(es);\n\nconst store = createStore(rootReducer)\n\nif(localStorage.lang){\n    store.dispatch({type:'CHANGE_LOCALE', lang: localStorage.lang});\n}\n\nReactDOM.render(<Provider store={store}> <App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}