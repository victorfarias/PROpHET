{"version":3,"sources":["assets/mind.svg","assets/brain.svg","assets/logo.png","assets/splash.png","assets/man.svg","assets/icecream.svg","assets/heart.svg","messages.js","pages/HomePage/HomePage.js","components/Question/Question.js","pages/QuizPage/QuizPage.js","pages/ResultPage/ResultPage.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","messages","en","male","glycemia","aspects","acm","microangiopathy","lacunar_syndrome","aortic_insufficiency","result","total","odd","likelihood","pt","es","withRouter","connect","dispatch","changeLanguage","lang","type","props","history","onClick","push","react_default","a","createElement","className","src","splash","alt","logo","Question","_this$props","this","question","checked","disabled","changeChecked","changeDisabled","classes","classNames","switch","index_es","id","onChange","defaultChecked","Component","state","answers","QuizPage","components_Question_Question","man","text","icecream","mind","brain","heart","react_router_dom","to","ResultPage","probability","score","odds","toFixed","questions_score","questions","reduce","obj","questions_prob","g","Math","pow","E","locale","basename","process","react_router","exact","path","component","HomePage","Boolean","window","location","hostname","match","initState","rootReducer","arguments","length","undefined","action","console","log","Object","objectSpread","defineProperty","localStorage","addLocaleData","store","createStore","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6f1cf9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mind.3bbab716.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.ec6748d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.793ec6f2.png\";","module.exports = __webpack_public_path__ + \"static/media/splash.c0493b08.png\";","module.exports = __webpack_public_path__ + \"static/media/man.f8a97699.svg\";","module.exports = __webpack_public_path__ + \"static/media/icecream.04daed32.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.c0be590a.svg\";","export default {\n    en:{\n        'male':'Male gender',\n        'glycemia':'Admission hyperglycemia \\\\u2265 180 mg/dL', \n        'aspects':'ASPECTS on admission (CT Scan)', \n        'acm':'Sinal de ACM hiperdensa',\n        'microangiopathy':'Leukoaraiosis', \n        'lacunar_syndrome':'Lacunar syndrome', \n        'aortic_insufficiency':'Cardio-aortic embolism',\n        'result': 'Result',\n        'total': 'Total',\n        'odd': 'Odd ratio',\n        'likelihood': 'Likelihood (%)'\n    },\n    pt:{\n        'male':'Sexo Masculino',\n        'glycemia':'Glicemia Admissional \\\\u2265 180mg/dL',\n        'aspects':'ASPECTS admissional &le; 7',\n        'acm':'Sinal de ACM hiperdensa',\n        'microangiopathy':'Microangiopatia',\n        'lacunar_syndrome':'Síndrome Lacunar',\n        'aortic_insufficiency':'Etiologia Cárdio-aórtica',\n        'result': 'Resultado',\n        'total': 'Total',\n        'odd': 'Odd ratio',\n        'likelihood': 'Likelihood (%)'\n    },\n    es:{\n        'male':'Sexo Masculino',\n        'glycemia':'Hiperglucemia de ingreso \\\\u2265 180mg/dL',\n        'aspects':'ASPECTS al ingresso',\n        'acm':'Sinal de ACM hiperdensa',\n        'microangiopathy':'Leucoaraiosis',\n        'lacunar_syndrome':'Síndrome lacunar',\n        'aortic_insufficiency':'Embolismo cardio-aórtico',\n        'result': 'Resultado',\n        'total': 'Total',\n        'odd': 'Odd ratio',\n        'likelihood': 'Probabilidad (%)'\n    }\n\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport logo from '../../assets/logo.png';\nimport splash from '../../assets/splash.png';\nimport { withRouter } from 'react-router-dom'\nimport './HomePage.css'\n\n\nfunction HomePage(props){    \n    const { history, changeLanguage } = props;   \n    let onClick = (lang) => {\n        changeLanguage(lang);\n        history.push('/quiz')\n    }\n    \n    return (            \n        <div className=\"home-container\">\n            <div className=\"splash-background\">\n                <img src={splash} alt=\"\"/>\n            </div>\n            <div className=\"circle\">                    \n                <div className=\"menu\">\n                    <div className=\"row1\">\n                        <img className=\"logo\" src={logo} alt=\"\"/>\n                    </div>\n                    <div className=\"row2\">\n                        <button onClick={()=>{onClick('en')}} className=\"button english\">English</button>\n                        <button onClick={()=>{onClick('pt')}} className=\"button portuguese\">Português</button>\n                        <button onClick={()=>{onClick('es')}} className=\"button espanol\">Españhol</button>\n                    </div>\n                    <div className=\"row3\">\n                        <button className=\"button references\">References</button>                            \n                    </div>                        \n                </div>\n            </div>\n        </div>                \n    )\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return({\n        changeLanguage: (lang) => {dispatch({type: 'CHANGE_LOCALE', lang})},\n    })\n}\n\n\nexport default withRouter(connect(()=>({}), mapDispatchToProps)(HomePage));","import React, {Component} from 'react';\nimport './Question.css';\n// import man from '../../assets/man.svg'\nimport classNames from 'classnames'\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from \"react-intl\";\n\n\nclass Question extends Component{\n    render(){\n        const {question, checked, disabled, changeChecked, changeDisabled} = this.props;\n        let classes = classNames({\n            switch: true,\n            // checked: true,\n            disabled: disabled\n        });\n        \n        return(\n            <div className=\"question\">\n                <img src={this.props.src} alt=\"\"/>\n                <div className=\"texto\">\n                    {/* <span>{this.props.text}</span> */}\n                    <FormattedMessage id={question}></FormattedMessage>\n                </div>\n                <label className={classes} onChange={()=>changeChecked(question)}>\n                    <input type=\"checkbox\" defaultChecked={checked} />\n                    <span className=\"slider\"></span>\n                </label>                \n                <label className=\"container\" onChange={()=>changeDisabled(question)}>Não disponível\n                    <input type=\"checkbox\" defaultChecked={disabled} />\n                    <span className=\"checkmark\"></span>\n                </label>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, props) =>{\n    return{\n        checked: state.answers[props.question].checked,\n        disabled: state.answers[props.question].disabled,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return({\n        changeChecked: (question) => {dispatch({type: 'CHANGE_CHECKED', question})},\n        changeDisabled: (question) => {dispatch({type: 'CHANGE_DISABLED', question})},\n    })\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);","import React, {Component} from 'react';\nimport Question from '../../components/Question/Question'\nimport { Link } from 'react-router-dom';\nimport './QuizPage.css'\n\nimport man from '../../assets/man.svg'\nimport icecream from '../../assets/icecream.svg'\nimport mind from '../../assets/mind.svg'\nimport brain from '../../assets/brain.svg'\nimport heart from '../../assets/heart.svg'\n\nclass QuizPage extends Component{\n    render(){\n        return (\n            <div className=\"quiz-container\">\n                <div className=\"inner-quiz\">\n                    <div className=\"quiz\">\n                        <Question question=\"male\" src={man} text=\"Sexo Masculino\"/>\n                        <Question question=\"glycemia\" src={icecream} text=\"Glicemia Admissional &ge; 180mg/dL\"/>\n                        <Question question=\"aspects\" src={mind} text=\"ASPECTS admissional &le; 7\"/>\n                        <Question question=\"acm\" src={mind} text=\"Sinal de ACM hiperdensa\"/>\n                        <Question question=\"microangiopathy\" src={brain} text=\"Microangiopatia\"/>\n                        <Question question=\"lacunar_syndrome\" src={brain} text=\"Síndrome Lacunar\"/>\n                        <Question question=\"aortic_insufficiency\" src={heart} text=\"Etiologia Cárdio-aórtica\"/>\n                        <Link className=\"evaluate\" to='/result'>Evaluate</Link>\n                    </div>                \n                </div>                \n            </div>                \n        )\n    }\n}\n\nexport default QuizPage;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl'\nimport './ResultPage.css'\n\nclass ResultPage extends Component{\n    render(){\n        const { probability, score, odds } = this.props;\n        return(            \n            <div className=\"result-container\">\n                <div className=\"result-inner-container\">\n                    <div className=\"results\">\n                        <div className=\"panel large\">\n                            <FormattedMessage id='result'></FormattedMessage>\n                            </div>\n                        <div className=\"result-item\">\n                            <div className=\"panel large\">\n                                <FormattedMessage id=\"total\"></FormattedMessage>\n                            </div>\n                            <div className=\"result-value\">{score}</div>\n                        </div>\n                        <div className=\"result-item\">\n                            <div className=\"panel large\">\n                                <FormattedMessage id=\"odd\"></FormattedMessage>\n                            </div>\n                            <div className=\"result-value\">{odds}</div>\n                        </div>\n                        <div className=\"result-item\">\n                            <div className=\"panel large green\">\n                                <FormattedMessage id=\"likelihood\"></FormattedMessage>                                \n                            </div>\n                            <div className=\"result-value red\">{probability.toFixed(3)}</div>\n                        </div>\n                        {score >= 6 &&\n                            <div className=\"alert\">\n                                <b>Alerta: Pontuação Total maior que 6 </b> <br/>\n                                Sensibilidade: 87.4% <br/> \n                                Especificidade 69% <br/>\n                                Sensibilidade para TH sintomática: 93.2% <br/>\n                                Especificidade para TH sintomática: 68% <br/>\n                                Odds Ratio  14.5 <br/>\n                                Odds Ratio para TH sintomática: 29\n                            </div>\n                        }                        \n                    </div>                    \n                </div>\n            </div>\n        )  \n    }\n}\n\nconst mapStateToProps = (state) =>{\n    let questions_score = state.questions.reduce(\n        (obj, question) => {         \n            if(state.answers[question].disabled){\n                obj[question] = 0;\n            }else{\n                obj[question] = +state.answers[question].checked;\n            }            \n            return obj;\n        }, {});\n    let score = 3*questions_score.male + 4*questions_score.glycemia +\n        5*questions_score.aspects + 2*questions_score.acm + \n        2*questions_score.microangiopathy -8*questions_score.lacunar_syndrome +\n        4*questions_score.aortic_insufficiency;\n\n    let questions_prob = state.questions.reduce(\n        (obj, question) => {\n            if(state.answers[question].disabled){\n                obj[question] = 0;\n            }else{\n                if(state.answers[question].checked){\n                    obj[question] = 1;\n                }else{\n                    obj[question] = -1;\n                }\n            }            \n            return obj;\n        }, {});\n    let g = -2.535 + 1.153*questions_prob.male + 1.366*questions_prob.glycemia +\n                1.602*questions_prob.aspects + 0.814*questions_prob.acm + \n                0.645*questions_prob.microangiopathy - 2.219*questions_prob.lacunar_syndrome +\n                1.257*questions_prob.aortic_insufficiency;\n    let probability = 1/(1+Math.pow(Math.E, -g))\n    return{\n        probability,\n        score,\n        odds: score*1.38,\n    }\n}\nexport default connect(mapStateToProps)(ResultPage);","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport { IntlProvider } from \"react-intl\";\nimport { connect } from 'react-redux';\nimport messages from './messages';\nimport HomePage from './pages/HomePage/HomePage';\nimport QuizPage from './pages/QuizPage/QuizPage'\nimport ResultPage from './pages/ResultPage/ResultPage'\n\n\nfunction App(props) {\n  const {lang} = props;\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <IntlProvider locale={lang} messages={messages[lang]}>\n        <div className=\"App\">\n          <Route exact path='/' component={HomePage} />\n          <Route path='/quiz' component={QuizPage} />\n          <Route path='/result' component={ResultPage} />\n          {/* <HomePage></HomePage> */}\n        </div>\n      </IntlProvider>      \n    </BrowserRouter>\n  );\n}\n\nconst mapStateToProps = (state) =>{\n  return({\n    lang: state.locale.lang,\n  })\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    answers:{\n        male: {\n            checked: false,\n            disabled: false,\n        },\n        glycemia:{\n            checked: false,\n            disabled: false,\n        },\n        aspects:{\n            checked: false,\n            disabled: false,\n        },\n        acm:{\n            checked: false,\n            disabled: false,\n        },\n        microangiopathy:{\n            checked: false,\n            disabled: false,\n        },\n        lacunar_syndrome:{\n            checked: false,\n            disabled: false,\n        },\n        aortic_insufficiency:{\n            checked: false,\n            disabled: false,\n        },\n    },    \n    questions: [\n        'male', 'glycemia', 'aspects', 'acm', 'microangiopathy', 'lacunar_syndrome', 'aortic_insufficiency'\n    ],\n    locale:{\n        lang: 'en'\n    }\n}\n\nconst rootReducer = (state = initState, action) => {\n    console.log(state);\n    console.log(action);\n    if(action.type==='CHANGE_CHECKED'){\n        return({\n            ...state,\n            answers:{\n                ...state.answers,\n                [action.question]:{\n                    ...state.answers[action.question],\n                    checked: !state.answers[action.question].checked,\n                }\n            }            \n        })\n    }else if(action.type==='CHANGE_DISABLED'){\n        return({\n            ...state,\n            answers:{\n                ...state.answers,\n                [action.question]:{\n                    ...state.answers[action.question],\n                    disabled: !state.answers[action.question].disabled,\n                }\n            }\n        })\n    }else if(action.type==='CHANGE_LOCALE'){\n        localStorage.lang = action.lang;\n        return({\n            ...state,\n            locale:{\n                ...state.locale,\n                lang:action.lang,\n            }\n        })\n    }\n    return state;\n}\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport { Provider  } from 'react-redux'\nimport { addLocaleData } from \"react-intl\";\nimport en from 'react-intl/locale-data/en';\nimport es from 'react-intl/locale-data/es';\nimport pt from 'react-intl/locale-data/pt';\nimport rootReducer from './reducers/rootReducer'\n\naddLocaleData(en);\naddLocaleData(pt);\naddLocaleData(es);\n\nconst store = createStore(rootReducer)\n\nif(localStorage.lang){\n    store.dispatch({type:'CHANGE_LOCALE', lang: localStorage.lang});\n}\n\nReactDOM.render(<Provider store={store}> <App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}