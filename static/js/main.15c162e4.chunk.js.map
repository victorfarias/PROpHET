{"version":3,"sources":["assets/mind.svg","assets/brain.svg","assets/logo.png","assets/splash.png","assets/man.svg","assets/icecream.svg","assets/heart.svg","pages/HomePage/HomePage.js","components/Question/Question.js","pages/QuizPage/QuizPage.js","pages/ResultPage/ResultPage.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","HomePage","react_default","a","createElement","className","src","splash","alt","logo","react_router_dom","to","Component","Question","_this$props","this","props","question","checked","disabled","changeChecked","changeDisabled","classes","classNames","switch","text","onChange","type","defaultChecked","connect","state","dispatch","QuizPage","components_Question_Question","man","icecream","mind","brain","heart","ResultPage","probability","score","toFixed","questions_score","questions","reduce","obj","male","glycemia","aspects","acm","microangiopathy","lacunar_syndrome","aortic_insufficiency","questions_prob","g","Math","pow","E","console","log","odds","App","basename","process","react_router","exact","path","component","Boolean","window","location","hostname","match","initState","rootReducer","arguments","length","undefined","action","Object","objectSpread","defineProperty","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2VCiCzBC,0LAzBP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAQC,IAAI,MAE1BN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,IAAKG,IAAMD,IAAI,MAEzCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAlB,WACAH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,QAAQN,UAAU,qBAA3B,gBACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAlB,gBAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qBAAlB,yBAlBLO,+CCCjBC,mLACM,IAAAC,EACiEC,KAAKC,MAAnEC,EADHH,EACGG,SAAUC,EADbJ,EACaI,QAASC,EADtBL,EACsBK,SAAUC,EADhCN,EACgCM,cAAeC,EAD/CP,EAC+CO,eAC/CC,EAAUC,IAAW,CACrBC,QAAQ,EAERL,SAAUA,IAGd,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKS,KAAKC,MAAMV,IAAKE,IAAI,KAC9BN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,YAAOW,KAAKC,MAAMS,OAEtBvB,EAAAC,EAAAC,cAAA,SAAOC,UAAWiB,EAASI,SAAU,kBAAIN,EAAcH,KACnDf,EAAAC,EAAAC,cAAA,SAAOuB,KAAK,WAAWC,eAAgBV,IACvChB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAEpBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAYqB,SAAU,kBAAIL,EAAeJ,KAA1D,uBACIf,EAAAC,EAAAC,cAAA,SAAOuB,KAAK,WAAWC,eAAgBT,IACvCjB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBArBbO,aA0CRiB,cAdS,SAACC,EAAOd,GAC5B,MAAM,CACFE,QAASY,EAAMd,EAAMC,UAAUC,QAC/BC,SAAUW,EAAMd,EAAMC,UAAUE,WAIb,SAACY,GACxB,MAAO,CACHX,cAAe,SAACH,GAAcc,EAAS,CAACJ,KAAM,iBAAkBV,cAChEI,eAAgB,SAACJ,GAAcc,EAAS,CAACJ,KAAM,kBAAmBV,gBAI3DY,CAA6ChB,gGCjB7CmB,mLAnBP,OACI9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAC6B,EAAD,CAAUhB,SAAS,OAAOX,IAAK4B,IAAKT,KAAK,mBACzCvB,EAAAC,EAAAC,cAAC6B,EAAD,CAAUhB,SAAS,WAAWX,IAAK6B,IAAUV,KAAK,yCAClDvB,EAAAC,EAAAC,cAAC6B,EAAD,CAAUhB,SAAS,UAAUX,IAAK8B,IAAMX,KAAK,iCAC7CvB,EAAAC,EAAAC,cAAC6B,EAAD,CAAUhB,SAAS,MAAMX,IAAK8B,IAAMX,KAAK,4BACzCvB,EAAAC,EAAAC,cAAC6B,EAAD,CAAUhB,SAAS,kBAAkBX,IAAK+B,IAAOZ,KAAK,oBACtDvB,EAAAC,EAAAC,cAAC6B,EAAD,CAAUhB,SAAS,mBAAmBX,IAAK+B,IAAOZ,KAAK,wBACvDvB,EAAAC,EAAAC,cAAC6B,EAAD,CAAUhB,SAAS,uBAAuBX,IAAKgC,IAAOb,KAAK,mCAC3DvB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAML,UAAU,WAAWM,GAAG,WAA9B,sBAbDC,aCPjB2B,0LACM,IAAAzB,EAC2BC,KAAKC,MAA5BwB,EADJ1B,EACI0B,YAAaC,EADjB3B,EACiB2B,MACrB,OACIvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,yBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBoC,IAMnCvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,cACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,MAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAf,iBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBmC,EAAYE,QAAQ,KAE1DD,GAAS,GACNvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,uDADJ,IACgDF,EAAAC,EAAAC,cAAA,WADhD,wBAEyBF,EAAAC,EAAAC,cAAA,WAFzB,sBAGuBF,EAAAC,EAAAC,cAAA,WAHvB,+CAI6CF,EAAAC,EAAAC,cAAA,WAJ7C,8CAK4CF,EAAAC,EAAAC,cAAA,WAL5C,oBAMqBF,EAAAC,EAAAC,cAAA,WANrB,mDAzBHQ,cAqFViB,cA3CS,SAACC,GACrB,IAAIa,EAAkBb,EAAMc,UAAUC,OAClC,SAACC,EAAK7B,GAMF,OALGa,EAAMb,GAAUE,SACf2B,EAAI7B,GAAY,EAEhB6B,EAAI7B,IAAaa,EAAMb,GAAUC,QAE9B4B,GACR,IAEHL,EAAQ,EAAEE,EAAgBI,KAAO,EAAEJ,EAAgBK,SACnD,EAAEL,EAAgBM,QAAU,EAAEN,EAAgBO,IAC9C,EAAEP,EAAgBQ,gBAAiB,EAAER,EAAgBS,iBACrD,EAAET,EAAgBU,qBAElBC,EAAiBxB,EAAMc,UAAUC,OACjC,SAACC,EAAK7B,GAUF,OATGa,EAAMb,GAAUE,SACf2B,EAAI7B,GAAY,EAEba,EAAMb,GAAUC,QACf4B,EAAI7B,GAAY,EAEhB6B,EAAI7B,IAAa,EAGlB6B,GACR,IAEHS,EAAa,MAAMD,EAAeP,KAA7B,MAAoC,MAAMO,EAAeN,SACtD,MAAMM,EAAeL,QAAU,KAAMK,EAAeJ,IACpD,KAAMI,EAAeH,gBAAkB,MAAMG,EAAeF,iBAC5D,MAAME,EAAeD,qBAC7Bb,EAAc,GAAG,EAAEgB,KAAKC,IAAID,KAAKE,GAAIH,IAEzC,OADAI,QAAQC,IAAIN,GACN,CACFd,cACAC,QACAoB,KAAY,KAANpB,IAICZ,CAAyBU,GCrEzBuB,MAbf,WACE,OACE5D,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAeqD,SAAUC,YACvB9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnE,IACjCC,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWpC,IAC/B9B,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAW7B,OCDrB8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uFClBAC,EAAY,CACd3B,KAAM,CACF7B,SAAS,EACTC,UAAU,GAEd6B,SAAS,CACL9B,SAAS,EACTC,UAAU,GAEd8B,QAAQ,CACJ/B,SAAS,EACTC,UAAU,GAEd+B,IAAI,CACAhC,SAAS,EACTC,UAAU,GAEdgC,gBAAgB,CACZjC,SAAS,EACTC,UAAU,GAEdiC,iBAAiB,CACblC,SAAS,EACTC,UAAU,GAEdkC,qBAAqB,CACjBnC,SAAS,EACTC,UAAU,GAEdyB,UAAW,CACP,OAAQ,WAAY,UAAW,MAAO,kBAAmB,mBAAoB,yBAyBtE+B,EArBK,WAA+B,IAA9B7C,EAA8B8C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,MAAiB,mBAAdC,EAAOpD,KACNqD,OAAAC,EAAA,EAAAD,CAAA,GACOlD,EADPkD,OAAAE,EAAA,EAAAF,CAAA,GAEKD,EAAO9D,SAFZ+D,OAAAC,EAAA,EAAAD,CAAA,GAGWlD,EAAMiD,EAAO9D,UAHxB,CAIQC,SAAUY,EAAMiD,EAAO9D,UAAUC,YAGtB,oBAAd6D,EAAOpD,KACZqD,OAAAC,EAAA,EAAAD,CAAA,GACOlD,EADPkD,OAAAE,EAAA,EAAAF,CAAA,GAEKD,EAAO9D,SAFZ+D,OAAAC,EAAA,EAAAD,CAAA,GAGWlD,EAAMiD,EAAO9D,UAHxB,CAIQE,UAAWW,EAAMiD,EAAO9D,UAAUE,aAIvCW,GC3CLqD,EAAQC,YAAYT,GAE1BU,IAASC,OAAOpF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAUJ,MAAOA,GAAjB,IAAyBjF,EAAAC,EAAAC,cAACoF,EAAD,OAAoBC,SAASC,eAAe,SFsH/E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.15c162e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mind.3bbab716.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.ec6748d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.793ec6f2.png\";","module.exports = __webpack_public_path__ + \"static/media/splash.c0493b08.png\";","module.exports = __webpack_public_path__ + \"static/media/man.f8a97699.svg\";","module.exports = __webpack_public_path__ + \"static/media/icecream.04daed32.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.c0be590a.svg\";","import React, {Component} from 'react';\nimport logo from '../../assets/logo.png';\nimport splash from '../../assets/splash.png';\nimport { Link } from 'react-router-dom';\nimport './HomePage.css'\n\nclass HomePage extends Component{\n    render(){\n        return (\n            <div className=\"home-container\">                            \n                <div className=\"splash-background\">\n                    <img src={splash} alt=\"\"/>\n                </div>\n                <div className=\"circle\">                    \n                    <div className=\"menu\">\n                        <div className=\"row1\">\n                            <img className=\"logo\" src={logo} alt=\"\"/>\n                        </div>\n                        <div className=\"row2\">\n                            <button className=\"button english\">English</button>\n                            <Link to='/quiz' className=\"button portuguese\">Português</Link>\n                            <button className=\"button espanol\">Españhol</button>\n                        </div>\n                        <div className=\"row3\">\n                            <button className=\"button references\">References</button>                            \n                        </div>                        \n                    </div>\n                </div>\n            </div>                \n        )\n    }\n}\n\nexport default HomePage;","import React, {Component} from 'react';\nimport './Question.css';\n// import man from '../../assets/man.svg'\nimport classNames from 'classnames'\nimport { connect } from 'react-redux';\n\n\nclass Question extends Component{\n    render(){\n        const {question, checked, disabled, changeChecked, changeDisabled} = this.props;\n        let classes = classNames({\n            switch: true,\n            // checked: true,\n            disabled: disabled\n        });\n        \n        return(\n            <div className=\"question\">\n                <img src={this.props.src} alt=\"\"/>\n                <div className=\"texto\">\n                    <span>{this.props.text}</span>\n                </div>\n                <label className={classes} onChange={()=>changeChecked(question)}>\n                    <input type=\"checkbox\" defaultChecked={checked} />\n                    <span className=\"slider\"></span>\n                </label>                \n                <label className=\"container\" onChange={()=>changeDisabled(question)}>Não disponível\n                    <input type=\"checkbox\" defaultChecked={disabled} />\n                    <span className=\"checkmark\"></span>\n                </label>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, props) =>{\n    return{\n        checked: state[props.question].checked,\n        disabled: state[props.question].disabled,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return({\n        changeChecked: (question) => {dispatch({type: 'CHANGE_CHECKED', question})},\n        changeDisabled: (question) => {dispatch({type: 'CHANGE_DISABLED', question})},\n    })\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);","import React, {Component} from 'react';\nimport Question from '../../components/Question/Question'\nimport { Link } from 'react-router-dom';\nimport './QuizPage.css'\n\nimport man from '../../assets/man.svg'\nimport icecream from '../../assets/icecream.svg'\nimport mind from '../../assets/mind.svg'\nimport brain from '../../assets/brain.svg'\nimport heart from '../../assets/heart.svg'\n\nclass QuizPage extends Component{\n    render(){\n        return (\n            <div className=\"quiz-container\">\n                <div className=\"inner-quiz\">\n                    <div className=\"quiz\">\n                        <Question question=\"male\" src={man} text=\"Sexo Masculino\"/>\n                        <Question question=\"glycemia\" src={icecream} text=\"Glicemia Admissional &ge; 180mg/dL\"/>\n                        <Question question=\"aspects\" src={mind} text=\"ASPECTS admissional &le; 7\"/>\n                        <Question question=\"acm\" src={mind} text=\"Sinal de ACM hiperdensa\"/>\n                        <Question question=\"microangiopathy\" src={brain} text=\"Microangiopatia\"/>\n                        <Question question=\"lacunar_syndrome\" src={brain} text=\"Síndrome Lacunar\"/>\n                        <Question question=\"aortic_insufficiency\" src={heart} text=\"Etiologia Cárdio-aórtica\"/>\n                        <Link className=\"evaluate\" to='/result'>Evaluate</Link>\n                    </div>                \n                </div>                \n            </div>                \n        )\n    }\n}\n\nexport default QuizPage;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport './ResultPage.css'\n\nclass ResultPage extends Component{\n    render(){\n        const { probability, score } = this.props;\n        return(            \n            <div className=\"result-container\">\n                <div className=\"result-inner-container\">\n                    <div className=\"results\">\n                        <div className=\"panel large\">Resultado</div>\n                        <div className=\"result-item\">\n                            <div className=\"panel large\">Pontuação Total</div>\n                            <div className=\"result-value\">{score}</div>\n                        </div>\n                        {/* <div className=\"result-item\">\n                            <div className=\"panel large\">Sensibilidade</div>\n                            <div className=\"result-value\">0.5</div>\n                        </div> */}\n                        <div className=\"result-item\">\n                            <div className=\"panel large\">Odds Ratio</div>\n                            <div className=\"result-value\">3</div>\n                        </div>\n                        <div className=\"result-item\">\n                            <div className=\"panel large green\">Probabilidade</div>\n                            <div className=\"result-value red\">{probability.toFixed(3)}</div>\n                        </div>\n                        {score >= 6 &&\n                            <div className=\"alert\">\n                                <b>Alerta: Pontuação Total maior que 6 </b> <br/>\n                                Sensibilidade: 87.4% <br/> \n                                Especificidade 69% <br/>\n                                Sensibilidade para TH sintomática: 93.2% <br/>\n                                Especificidade para TH sintomática: 68% <br/>\n                                Odds Ratio  14.5 <br/>\n                                Odds Ratio para TH sintomática: 29\n                            </div>\n                        }                        \n                    </div>                    \n                </div>\n            </div>\n        )  \n    }\n}\n\nconst mapStateToProps = (state) =>{\n    let questions_score = state.questions.reduce(\n        (obj, question) => {         \n            if(state[question].disabled){\n                obj[question] = 0;\n            }else{\n                obj[question] = +state[question].checked;\n            }            \n            return obj;\n        }, {});\n    \n    let score = 3*questions_score.male + 4*questions_score.glycemia +\n        5*questions_score.aspects + 2*questions_score.acm + \n        2*questions_score.microangiopathy -8*questions_score.lacunar_syndrome +\n        4*questions_score.aortic_insufficiency;\n\n    let questions_prob = state.questions.reduce(\n        (obj, question) => {\n            if(state[question].disabled){\n                obj[question] = 0;\n            }else{\n                if(state[question].checked){\n                    obj[question] = 1;\n                }else{\n                    obj[question] = -1;\n                }\n            }            \n            return obj;\n        }, {});\n\n    let g = -2.535 + 1.153*questions_prob.male + 1.366*questions_prob.glycemia +\n                1.602*questions_prob.aspects + 0.814*questions_prob.acm + \n                0.645*questions_prob.microangiopathy - 2.219*questions_prob.lacunar_syndrome +\n                1.257*questions_prob.aortic_insufficiency;\n    let probability = 1/(1+Math.pow(Math.E, -g))\n    console.log(questions_prob);\n    return{\n        probability,\n        score,\n        odds: score*1.38,\n    }\n}\n\nexport default connect(mapStateToProps)(ResultPage);\n\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport HomePage from './pages/HomePage/HomePage'\nimport QuizPage from './pages/QuizPage/QuizPage'\nimport ResultPage from './pages/ResultPage/ResultPage'\n\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Route exact path='/' component={HomePage} />\n        <Route path='/quiz' component={QuizPage} />\n        <Route path='/result' component={ResultPage} />\n        {/* <HomePage></HomePage> */}\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    male: {\n        checked: false,\n        disabled: false,\n    },\n    glycemia:{\n        checked: false,\n        disabled: false,\n    },\n    aspects:{\n        checked: false,\n        disabled: false,\n    },\n    acm:{\n        checked: false,\n        disabled: false,\n    },\n    microangiopathy:{\n        checked: false,\n        disabled: false,\n    },\n    lacunar_syndrome:{\n        checked: false,\n        disabled: false,\n    },\n    aortic_insufficiency:{\n        checked: false,\n        disabled: false,\n    },\n    questions: [\n        'male', 'glycemia', 'aspects', 'acm', 'microangiopathy', 'lacunar_syndrome', 'aortic_insufficiency'\n    ]\n}\n\nconst rootReducer = (state = initState, action) => {\n    if(action.type==='CHANGE_CHECKED'){\n        return({\n            ...state,\n            [action.question]:{\n                ...state[action.question],\n                checked: !state[action.question].checked,\n            }\n        })\n    }else if(action.type==='CHANGE_DISABLED'){\n        return({\n            ...state,\n            [action.question]:{\n                ...state[action.question],\n                disabled: !state[action.question].disabled,\n            }\n        })\n    }\n    return state;\n}\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport { Provider  } from 'react-redux'\nimport rootReducer from './reducers/rootReducer'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(<Provider store={store}> <App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}